Build an Enterprise Consulting Website (Next.js + TypeScript) with Full Pages & Content

**Goal:** Create a production-ready, enterprise-grade consulting website for **{{CompanyName}}**, a global consulting firm serving **{{Industries}}**. Deliver a complete **Next.js + TypeScript** project with high-quality copy, reusable components, SEO, accessibility, analytics, and forms—ready to deploy.

## Tech & Standards

* **Framework:** Next.js 14 (App Router) + TypeScript, React 18, SSR/SSG as appropriate

* **Styling:** Tailwind CSS + a small design system (tokens + components)

* **Content:** MDX for long-form pages (case studies, blogs, whitepapers)

* **CMS (optional):** Headless ready (e.g., Sanity/Contentlayer)—abstract data access

* **Testing:** Jest + React Testing Library + Playwright smoke tests

* **Accessibility:** WCAG 2.2 AA, keyboard-first, focus visibility, ARIA where needed

* **Performance:** Aim Lighthouse 90+ (desktop & mobile), image optimization, route-level code splitting

* **Security:** Secure headers, CSRF for forms, spam protection (honeypot + simple challenge)

* **Analytics:** GA4 + privacy-first cookie consent. Add event tracking for key CTAs.

* **SEO:** Metadata per route, OpenGraph/Twitter cards, JSON-LD schema

## Brand & Tone

* Voice: confident, consultative, outcomes-focused; avoid fluff.

* Style: clear value propositions, quantified outcomes (KPIs), social proof.

## Required Sitemap (Pages + Real Content)

1. **Home**

* Hero with crisp value prop + primary CTA (“Book a Strategy Call”).

* Service overview grid (cards linking to service hubs).

* Proof: logos, stats, awards, certifications (placeholders OK).

* Featured case studies (3), testimonials, latest insights.

* CTA band + newsletter signup.

2. **About**

* Mission, values, leadership bios (3–6 execs), global footprint map, certifications, DEI statement.

* Timeline of milestones.

3. **Services (Hub)**

* Intro to capabilities + sector expertise.

* Cards to service pillars.

4. **Service Pillars** (each has its own page + 2–4 subpages):

* **Strategy & Operations**

* **Digital Transformation**

* **Cloud & Platform Engineering**

* **Data, Analytics & AI**

* **Cybersecurity & Risk**

* **Product Engineering**

* **Quality Engineering (QA)**

* **Managed Services / AMS**

For each **pillar page**: who we help, pain points, solution approach, engagement model, tools/tech, quantified outcomes, FAQs, CTA.

For each **subpage**: a niche offering (e.g., “Cloud Cost Optimization”, “GenAI Copilot for Support”, “CIS Hardening Program”) with detailed scope and ROI examples.

5. **Industries (Hub)**

* **{{Pick 4–6 industries}}**: e.g., Financial Services, Healthcare, Retail, Airlines, Manufacturing, Public Sector.

Each industry page: challenges, tailored solutions, relevant case studies, regulatory notes, metrics, CTA.

6. **Case Studies (Hub)**

* 6–12 case studies. Each case study page includes:

* Client context, problem, approach, architecture snapshot (text diagram), before/after KPIs, timeline, team/skills, stack, lessons learned, quotes.

7. **Insights / Blog**

* 10+ well-written posts (thought leadership, how-tos, executive briefings).

* Tagging, author bios, estimated read time, related posts.

8. **Resources**

* Whitepapers (3), webinar replays (3), checklists (2), ROI calculators (see below), templates. Gated downloads with consent checkbox.

9. **Solutions / Accelerators**

* Proprietary frameworks, reference architectures, code accelerators, starter kits. Clear benefits, implementation time, pricing tiers (if applicable).

10. **Pricing / Engagement Models**

* Fixed-scope packages, T\&M, retainer/MSA. Comparison table, what’s included, SLAs.

11. **Careers**

* Culture, benefits, DEI, interview process, job listings (static mock), campus hiring. Simple application form.

12. **Contact**

* Multi-step form (reason, budget range, timeline, message). Office locations with maps, regional emails, support links.

13. **Legal**

* Privacy Policy, Terms, Cookie Policy, Accessibility Statement.

14. **Regional/Language (optional)**

* i18n scaffolding with `en` + stub for `{{SecondLanguage}}`. Regional landing pages (e.g., “Consulting in {{Region}}”).

## Component Library (Build as Reusable TS Components)

* Layout primitives: `Header`, `Footer`, `Container`, `Section`, `Grid`, `Card`

* Navigation: desktop + mobile menu, breadcrumb, skip-to-content link

* Content: `Hero`, `FeatureList`, `Stat`, `Testimonial`, `LogoWall`, `FAQ`, `Timeline`

* Commerce-ish: `PricingTable`, `ComparisonTable`, `PlanBadge`

* Forms: `TextInput`, `Select`, `Textarea`, `Checkbox`, `MultiStepForm`, `NewsletterForm`

* Content blocks: `Callout`, `CTA`, `Quote`, `ImageWithCaption`, `KPIBand`

* Blog: `PostCard`, `TagPill`, `AuthorBadge`, `ReadingTime`

* Utilities: `Seo` (metadata), `JsonLd`, `Prose` (MDX-styled)

## Copy Requirements (Generate Real Content)

* Write **original**, non-generic copy per page. Avoid lorem ipsum.

* For each page, include a **headline (≤8 words)**, **standfirst (1–2 sentences)**, and **scannable subheads**.

* Use **metrics and outcomes**: “Cuted infra spend by 28% in 90 days.”

* Provide 6–10 **FAQs** per service/industry with crisp answers.

## SEO & Schema (Per Page)

* Title (≤60 chars), meta description (≤160 chars), canonical.

* OpenGraph image (generate a consistent brand cover).

* JSON-LD where appropriate:

* `Organization`, `BreadcrumbList`, `Article`, `BlogPosting`, `FAQPage`, `Product` (for packages), `JobPosting` (careers), `ContactPoint`.

## Calculators (Resources)

* Build 2 simple client-side calculators:

1. **Cloud Cost Optimization ROI**

2. **QA Automation Payback**

* Input fields with sensible defaults. Output: break-even, annualized savings, charts (lightweight).

## Forms & Integrations

* Contact + newsletter + gated resource forms.

* Client-side validation (email, required, length).

* Spam protection: honeypot + time-to-complete check.

* Thank-you pages with next steps.

* Abstract submission layer so it can be wired later to API/CRM (HubSpot/Salesforce).

## Layout & Design System

* Define tokens: colors, spacing, radii, shadows, typography scale.

* Light/dark mode toggle with persisted preference.

* Responsive: mobile-first, test at 360px, 768px, 1024px, 1440px.

## Performance Checklist

* Image optimization via Next/Image.

* Preload primary font subset (swap).

* Route-level code-splitting; lazy-load heavy components.

* Avoid blocking scripts; defer analytics.

## Project Structure (Suggested)

```

/app

/(site)/layout.tsx

/(site)/page.tsx // Home

/about/page.tsx

/services/page.tsx

/services/[slug]/page.tsx

/services/[slug]/[subslug]/page.tsx

/industries/page.tsx

/industries/[slug]/page.tsx

/case-studies/page.tsx

/case-studies/[slug]/page.tsx

/insights/page.tsx

/insights/[slug]/page.tsx

/resources/page.tsx

/resources/[slug]/page.tsx

/solutions/page.tsx

/pricing/page.tsx

/careers/page.tsx

/contact/page.tsx

/legal/privacy/page.tsx

/legal/terms/page.tsx

/legal/cookies/page.tsx

/components/* (TSX)

/content/* (MDX)

/lib/* (seo, analytics, forms, cms adapters)

/public/* (images, og)

```

## Deliverables

1. Complete Next.js + TS project with Tailwind, MDX, basic tests, and i18n scaffolding.

2. Fully written content for all pages listed (no lorem ipsum).

3. 6–12 case studies and 10+ insight posts with summaries and tags.

4. 2 calculators with working UI and logic.

5. SEO + JSON-LD implemented per route.

6. README with run/build/deploy instructions (Vercel ready), content editing guide, and how to connect a headless CMS later.

## Acceptance Criteria

* No TypeScript errors, `next build` passes.

* Lighthouse ≥90 on Performance, Accessibility, SEO, Best Practices.

* Keyboard navigable; screen-reader friendly.

* All CTAs and forms functional (mock handlers acceptable).

* Content feels enterprise-grade, measurable, and industry-specific.

**Company details to use as placeholders:**

* Name: **{{CompanyName}}**

* Tagline: **{{Tagline}}**

* Regions: **{{Regions}}**

* Industries: **{{Industries}}**

* Contact email/phone (masked): **{{Contact}}**

If anything is ambiguous, make reasonable assumptions and proceed. Provide the full code tree, key files, and sample content assets.